{"meta":{"title":"桃白白の野望","subtitle":null,"description":null,"author":"taobaibai","url":"http://cngeeker365.github.io","root":"/"},"pages":[],"posts":[{"title":"产品设计/目录","slug":"产品设计/目录","date":"2020-12-17T10:15:41.757Z","updated":"2020-12-17T10:15:41.757Z","comments":true,"path":"产品设计/目录/","link":"","permalink":"http://cngeeker365.github.io/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/%E7%9B%AE%E5%BD%95/","excerpt":"","text":"1. 自定义表单","categories":[],"tags":[]},{"title":"产品设计/自定义表单","slug":"产品设计/自定义表单","date":"2020-12-17T10:15:41.757Z","updated":"2020-12-17T10:15:41.757Z","comments":true,"path":"产品设计/自定义表单/","link":"","permalink":"http://cngeeker365.github.io/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A1%A8%E5%8D%95/","excerpt":"","text":"自定义表单","categories":[],"tags":[]},{"title":"tech/leetCode/452用最少数量的箭引爆气球","slug":"tech/leetCode/452用最少数量的箭引爆气球","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/leetCode/452用最少数量的箭引爆气球/","link":"","permalink":"http://cngeeker365.github.io/tech/leetCode/452%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/","excerpt":"","text":"452. 用最少数量的箭引爆气球 @2020-11-24 没有解题思路，参考了官方思路和答案 【题目解析】 （1）要使每只箭射中尽可能多的气球 ==&gt; 误区：容易盯着气球不放 （2）每个气球的位置是固定的 解题的关键是：找出放箭的位置，使每只箭引爆数量最大 【解题思路】 每只箭要引爆最大数量，那么必然满足： a. 箭是贴着某个气球的边缘射出的，且必然是右边缘（因右边缘才能与其他气球左边缘交叉时，可射中两个） b. 从某个右边缘射出一箭，若要最大化引爆量，那么必然满足： i. 右边缘位置（即放箭位置） &lt;= 所有被射中气球的右边缘位置 ii. 所有被射中气球的左边缘位置 &lt;= 右边缘位置（即放箭位置） iii. 所有未被射中气球的左边缘位置 &gt; 右边缘位置（即放箭位置） iv. 下一支箭的位置 = 所有未被射中气球中最小的右边缘位置 经过上述分析，题目涉及两类算法： * 排序算法 * 贪心算法 123456789101112131415161718192021222324252627282930313233343536373839class Solution &#123; public int findMinArrowShots(int[][] points) &#123; if (points.length == 0)&#123; return 0; &#125; //对气球右端按照有小到大排序 //每个point由左端点point[0]和右端点point[1]构成 Arrays.sort(points, new Comparator&lt;int[]&gt;() &#123; @Override public int compare(int[] point1, int[] point2) &#123; if(point1[1]&gt;point2[1])&#123; return 1 ; &#125;else if(point1[1]&lt;point2[1])&#123; return -1 ; &#125;else &#123; return 0; &#125; &#125; &#125;); int pos = points[0][1]; //第一只箭必然是从第一个气球的右端点放出 int ans = 1; //必然至少一支箭 for (int[] balloon: points) &#123; /** * 1. 排序后的气球，箭必然从每个气球的右端点放出 * 2. 若某个气球的左端点 &gt; 放出箭的气球的右端点，意味着： * （1）两个气球没有交集，因有序所以后面气球也如此 * （2）当前放出的箭达到了能射中的最大值，需要再放一只新的箭 * （3）新箭放出的位置 = 未被上支箭射中的第一个气球的右端点 */ if(balloon[0]&gt;pos)&#123; pos = balloon[1]; ans = ans + 1; &#125; &#125; return ans; &#125;&#125;","categories":[],"tags":[]},{"title":"reading/fojiao/yaoshijing/jingwen","slug":"reading/fojiao/yaoshijing/jingwen","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"reading/fojiao/yaoshijing/jingwen/","link":"","permalink":"http://cngeeker365.github.io/reading/fojiao/yaoshijing/jingwen/","excerpt":"","text":"药师琉璃光如来本愿功德经 香赞 炉香乍热；法界蒙熏；诸佛海会悉遥闻，随处结祥云；诚意方殷；诸佛现全身。 南无香云盖菩萨摩诃萨（三称） 南无本师释迦牟尼佛（三称） 发愿文 稽首三界尊，皈依十方佛。我今发宏愿，持此药师经。上报四重恩，下济三途苦。若有见闻者，悉发菩提心。 尽此一报身，同生琉璃国。亲觐大慈父，殷勤闻真谛。学习狮子吼，回返娑婆地，度众脱苦海，弘法利群迷。 奉请十二药叉大将 奉请： 宫毗罗大将。奉请： 伐折罗大将。奉请： 迷企罗大将。奉请： 安底罗大将。 奉请： 额你罗大将。奉请： 珊底罗大将。奉请： 因达罗大将。奉请： 波夷罗大将。 奉请： 摩虎罗大将。奉请： 真达罗大将。奉请： 招杜罗大将。奉请： 毗羯罗大将。 南无药师琉璃光如来（ 三称 ） 南无药师会上佛菩萨（ 三称 ） 开经偈 无上甚深微妙法，百千万劫难遭遇，我今见闻得受持，愿解如来真实义。 药师琉璃光如来本愿功德经 唐三藏法师玄奘奉诏译 如是我闻，一时薄伽梵游化诸国，至广严城，住乐音树下，与大苾刍众八千人俱，菩萨摩诃萨三万六千，及国王大臣，婆罗门，居士，天龙药叉，人非人等，无量大众，恭敬围绕，而为说法。 尔时曼殊室利法王子，承佛威神，从座而起，偏袒一肩，右膝着地，向薄伽梵，曲躬合掌。白言： 世尊，惟愿演说如是相类诸佛名号，及本大愿殊胜功德，令诸闻者，业障消除，为欲利乐像法转时诸有情故。 尔时，世尊赞曼殊室利童子言： 善哉善哉，曼殊室利，汝以大悲，劝请我说诸佛名号本愿功德，为拔业障所缠有情，利益安乐像法转时诸有情故。汝今谛听，极善思维，当为汝说。曼殊室利言： 唯然，愿说，我等乐闻。 佛告曼殊室利： 东方去次过十殑伽沙等佛土，有世界名净琉璃，佛号药师琉璃光如来、 应正等觉、 明行圆满、 善逝、 世间解、 无上士、 调御丈夫、 天人师、 佛、 薄伽梵。 曼殊室利，彼世尊药师琉璃光如来，本行菩萨道时，发十二大愿，令诸有情，所求皆得。 第一大愿： 愿我来世，得阿耨多罗三藐三菩提时，自身光明，炽然照耀无量无数无边世界，以三十二大丈夫相，八十随形，庄严其身，令一切有情，如我无异。 第二大愿： 愿我来世得菩提时，身如琉璃，内外明澈，净无瑕秽，光明广大，功德巍巍，身善安住，焰网庄严，过于日月，幽冥众生，悉蒙开晓，随意所趣，做诸事业。 第三大愿： 愿我来世得菩提时，以无量无边智慧方便，令诸有情，皆得无尽所受用物，莫令众生有所乏少。 第四大愿： 愿我来世得菩提时，若诸有情，行邪道者，悉令安住菩提道中，若行声闻独觉乘者，皆以大乘而安立之。 第五大愿： 愿我来世得菩提时，若有无量无边有请，于我法中，修行梵行，一切皆令得不缺戒，具三聚戒，设有毁犯，闻我名已，还得清净不堕恶趣。 第六大愿： 愿我来世得菩提时，若诸有情，其身下劣，诸根不具，丑陋顽愚，盲聋喑哑，挛躄背偻，白癞癫狂，种种病苦，闻我名已，一切皆得端正黠慧。诸根完具，无诸疾苦。 第七大愿： 愿我来世得菩提时，若诸有情，众病逼切，无救无归，无医无药，无亲无家，贫穷多苦，我之名号，一经其耳，众病悉除，身心安乐，家属资具悉皆丰足，乃至证得无上菩提。 第八大愿： 愿我来世得菩提时，若有女人，为女百恶之所逼恼，极生厌离，愿舍女身，闻我名已，一切皆得转女成男，具丈夫相，乃至证得无上菩提。 第九大愿： 愿我来世得菩提时，令诸有情，出魔罥网，解脱一切外道缠缚，若堕种种恶见稠林，皆当引摄置于正见，渐令修习诸菩萨行，速证无上正等菩提。 第十大愿： 愿我来世得菩提时，若诸有情，王法所录，绳缚鞭挞，系闭牢狱，或当刑戮，及余无量灾难凌辱，悲愁煎迫，身心受苦，若闻我名，以我福德威神力故，皆得解脱一切忧苦。 第十一大愿： 愿我来世得菩提时，若诸有情，饥渴所恼，为求食故，造诸恶业，得闻我名，专念受持，我当先以上妙饮食，饱足其身，后以法味，毕竟安乐而建立之。 第十二大愿： 愿我来世得菩提时，若诸有情，贫无衣服，蚊虻寒热，昼夜逼恼，若闻我名，专念受持，如其所好，即得种种上妙衣服，宜得一切宝庄严俱，华鬘涂香，鼓乐众伎，随心所玩，皆令满足。曼殊室利，是为彼世尊药师琉璃光如来，应正等觉，行菩萨道时，所发十二微妙上愿。 复次： 曼殊室利，彼世尊药师琉璃光如来，行菩萨道时，所发大愿，及彼佛土功德庄严。我若一劫，若一劫余，说不能尽。然彼佛土，一向清净，无有女人，亦无恶趣，及苦音声，琉璃为地，金绳界道，城阙宫阁，轩窗罗网，皆七宝成，亦如西方极乐世界，功德庄严，等我差别。于其国中，有二菩萨摩诃萨，一名日光遍照，二名月光遍照，是彼无量无数菩萨众之上首，次补佛处，悉能持彼世尊药师琉璃光如来正法宝藏。是故曼殊室利，诸有信心善男子，男女人等，应当原生彼佛世尊。 尔时，世尊复告曼殊室利童子言： 曼殊室利，有诸众生，不识善恶，唯怀贪吝，不知布施及施果报，愚痴无智，阙于信根，多聚财宝，勤加守护。见乞者来，其心不喜，设不获已而行施时，如割身肉身生痛惜。复有无量悭贪有请，积集资材，于其自身尚不受用，何况能与父母妻子，奴婢作使，及来乞者。彼诸有情，从此命终，生饿鬼界，或傍生趣。由昔人间曾得暂闻药师琉璃光如来名故，今在恶趣，暂得忆念彼如来名，即于念时，从彼处没，还生人中，得宿命念，畏恶趣苦，不乐欲乐，好行惠施，一切所有悉无贪惜。渐次，尚能以头目手足，血肉身分，施来求者，况余财物。 复次： 曼殊室利，若诸有情，虽于如来受诸学处，而破尸罗，有虽不破尸罗，而破轨则，由于尸罗轨则虽得不坏，然毁正见，有虽不毁正见，而弃多闻，于佛所说契经深义，不能解了，有虽多闻，而增上慢，由增上慢覆蔽心故，自是非他，嫌谤正法，为魔伴党，如是愚人，自行邪见，复令无量俱胝有情，堕大险坑。","categories":[],"tags":[]},{"title":"dev/golang/test","slug":"dev/golang/test","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"dev/golang/test/","link":"","permalink":"http://cngeeker365.github.io/dev/golang/test/","excerpt":"","text":"test golang 153=13+53+33153 = 1^3 +5^3 + 3^3 153=13+53+33 st=>start: 注册印象笔记 e=>end: 您可以使用markdown op1=>operation: 登录印象笔记 op2=>operation: 购买并登录马克飞象 cond=>condition: 是否已经购买并登录了马克飞象? st->op1->cond cond(yes)->e cond(no)->op2->e{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","categories":[],"tags":[]},{"title":"reading/fojiao/yaoshijing/jishiguan","slug":"reading/fojiao/yaoshijing/jishiguan","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"reading/fojiao/yaoshijing/jishiguan/","link":"","permalink":"http://cngeeker365.github.io/reading/fojiao/yaoshijing/jishiguan/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"tech/leetCode/122买卖股票的最佳时机II","slug":"tech/leetCode/122买卖股票的最佳时机II","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/leetCode/122买卖股票的最佳时机II/","link":"","permalink":"http://cngeeker365.github.io/tech/leetCode/122%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII/","excerpt":"","text":"122. 买卖股票的最佳时机 II @2020-11-05 最开始看到这个题目的时候，误以为是要根据现有数据来计算趋势，并判断另一组数据中要买入哪些。 后来发现，其实该问题要的是利润最大化，于是有了几个思路。 1. 思路一 类似于股票中的“蜡烛图”，红色为涨，绿色为跌，利润最大化=所有红色蜡烛的合计。 这种简化的方法，不需要找出所有的“峰值”、“谷值”、“顺序”。 123456789101112class Solution &#123; public int maxProfit(int[] prices) &#123; int maxProfit = 0; for (int i = 1; i &lt; prices.length; i++) &#123; int tempProfit = prices[i] - prices[i-1]; if(tempProfit &gt; 0)&#123; maxProfit = tempProfit + maxProfit; &#125; &#125; return maxProfit; &#125;&#125; 时间复杂度：O(n)，仅遍历一次 空间复杂度：O(1)，需要常量的空间 2. 思路二 其实这个思路是 “思路一”的源头。即要获得最大利润，就要知道所有的谷及其后紧邻的峰，实现“低买高卖”。 $$ TotalProfits = \\sum_{i}(Height(Peak_i) - Height(Valley_i)) $$ 123456789101112131415161718class Solution &#123; public int maxProfit(int[] prices) &#123; int i = 0; int valley = prices[0]; int peak = prices[0]; int maxprofit = 0; while (i &lt; prices.length - 1) &#123; while (i &lt; prices.length - 1 &amp;&amp; prices[i] &gt;= prices[i + 1]) i++; valley = prices[i]; while (i &lt; prices.length - 1 &amp;&amp; prices[i] &lt;= prices[i + 1]) i++; peak = prices[i]; maxprofit += peak - valley; &#125; return maxprofit; &#125;&#125; 时间复杂度：O(n)。遍历一次。 空间复杂度：O(1)。需要常量的空间。 3. 思路三 关于这一条，其实是从 LeetCode 的解题思路中看到的，要计算所有可能的交易组合。 太麻烦就没有继续看了。","categories":[],"tags":[]},{"title":"tech/leetCode/1370上升下降字符串","slug":"tech/leetCode/1370上升下降字符串","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/leetCode/1370上升下降字符串/","link":"","permalink":"http://cngeeker365.github.io/tech/leetCode/1370%E4%B8%8A%E5%8D%87%E4%B8%8B%E9%99%8D%E5%AD%97%E7%AC%A6%E4%B8%B2/","excerpt":"","text":"1370. 上升下降字符串 题目分析： （1）对输入字符串的字符顺序不关心，但关心： * 各个字符出现的次数 * 因为取值都是关于大小，因此要对各个字符进行从小到大进行排序 （2）取值逻辑： 只要字符还有剩余，就一直重复循环： 从小到大循环： ∵ 字符从小到大排序 ∴ 结果字符串 += 从小到大每次拿一个值非零的字符 从大到小循环： ∵ 字符从大到小排序 ∴ 结果字符串 += 从大到小每次拿一个值非零的字符 12345678910111213141516171819202122232425262728class Solution &#123; public String sortString(String s) &#123; //创建数组，索引代表字母编号（如 0 代表 a），值代表字母出现的次数 int[] nums = new int[26]; //将输入字符串 s 解析到 nums for (int i = 0; i &lt; s.length(); i++) &#123; nums[s.charAt(i) - 'a'] ++; &#125; StringBuffer result = new StringBuffer(); while (result.length()&lt;s.length())&#123; for (int i = 0; i &lt; 26; i++) &#123; if (nums[i]&gt;0)&#123; result.append((char)(i+'a')); nums[i]--; &#125; &#125; for (int i = 25; i &gt;= 0 ; i--) &#123; if (nums[i]&gt;0)&#123; result.append((char)(i+'a')); nums[i]--; &#125; &#125; &#125; return result.toString(); &#125;&#125;","categories":[],"tags":[]},{"title":"tools/软件配置/mac配置","slug":"tools/软件配置/mac配置","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tools/软件配置/mac配置/","link":"","permalink":"http://cngeeker365.github.io/tools/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/mac%E9%85%8D%E7%BD%AE/","excerpt":"","text":"1. 安装 Homebrew &amp; Git 1/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\" 2. 研发环境配置 2.1 Golang环境配置 123456# 下载 golang1.15.2.darwin-amd64.tar.gzvim ~/.bash_profile export GOROOT=/usr/local/go export PATH=$GOROOT/bin:$PATH go version 2.2 安装 Anaconda及升级 12345678910111213141516171819202122232425262728293031323334# 1. 下载 Anaconda-2020.02.shbash ～/Download/Anaconda-2020.02.sh# 2. 配置环境变量vim ~/.bash_profile# Anacondaexport ANACONDA_HOME=/Users/liangchao/anaconda3/binexport PATH=$ANACONDA_HOME:$PATH:# 3. 安装 TensorFlowpip install tensorflow# 4. 升级Anaconda，要先升级condaconda update conda# 5. 升级Anacondaconda update Anaconda# 6. 升级pythonconda update python# 7. 查看安装的库pip list #查看库conda list #查看库及版本# 8. 安装/更新单个库（scipy）pip install scipypip install scipy --upgradeconda install scipyconda update scipy# 9. 安装/更新所有库conda update --all 2.3 安装Julia 12345# 1. 下载 julia-1.5.2-mac64.dmg，点击安装，拖入Application目录# 2. 创建命令软连接ln -s /Applications/Julia-1.5.app/Contents/Resources/julia/bin/julia /usr/local/bin/julia# 3. 新打开一个终端，输入 julia 即可# 4. 卸载：删除Julia.app，并删除包目录 ~/.julia","categories":[],"tags":[]},{"title":"tech/leetCode/7整数反转","slug":"tech/leetCode/7整数反转","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/leetCode/7整数反转/","link":"","permalink":"http://cngeeker365.github.io/tech/leetCode/7%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/","excerpt":"","text":"7. 整数反转","categories":[],"tags":[]},{"title":"tech/leetCode/leetCode","slug":"tech/leetCode/leetCode","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/leetCode/leetCode/","link":"","permalink":"http://cngeeker365.github.io/tech/leetCode/leetCode/","excerpt":"","text":"122买卖股票的最佳时机II","categories":[],"tags":[]},{"title":"tech/mysql/Untitled","slug":"tech/mysql/Untitled","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/mysql/Untitled/","link":"","permalink":"http://cngeeker365.github.io/tech/mysql/Untitled/","excerpt":"","text":"1. 安装 Homebrew &amp; Git 1/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\" 2. 研发环境配置 2.1 Golang环境配置 123456# 下载 golang1.15.2.darwin-amd64.tar.gzvim ~/.bash_profile export GOROOT=/usr/local/go export PATH=$GOROOT/bin:$PATH go version 2.2 安装 Anaconda及升级 12345678910111213141516171819202122232425262728293031323334# 1. 下载 Anaconda-2020.02.shbash ～/Download/Anaconda-2020.02.sh# 2. 配置环境变量vim ~/.bash_profile# Anacondaexport ANACONDA_HOME=/Users/liangchao/anaconda3/binexport PATH=$ANACONDA_HOME:$PATH:# 3. 安装 TensorFlowpip install tensorflow# 4. 升级Anaconda，要先升级condaconda update conda# 5. 升级Anacondaconda update Anaconda# 6. 升级pythonconda update python# 7. 查看安装的库pip list #查看库conda list #查看库及版本# 8. 安装/更新单个库（scipy）pip install scipypip install scipy --upgradeconda install scipyconda update scipy# 9. 安装/更新所有库conda update --all 2.3 安装Julia 12345# 1. 下载 julia-1.5.2-mac64.dmg，点击安装，拖入Application目录# 2. 创建命令软连接ln -s /Applications/Julia-1.5.app/Contents/Resources/julia/bin/julia /usr/local/bin/julia# 3. 新打开一个终端，输入 julia 即可# 4. 卸载：删除Julia.app，并删除包目录 ~/.julia","categories":[],"tags":[]},{"title":"tech/儒猿/0001_HashMap原理及优化","slug":"tech/儒猿/0001_HashMap原理及优化","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/儒猿/0001_HashMap原理及优化/","link":"","permalink":"http://cngeeker365.github.io/tech/%E5%84%92%E7%8C%BF/0001_HashMap%E5%8E%9F%E7%90%86%E5%8F%8A%E4%BC%98%E5%8C%96/","excerpt":"","text":"HashMap 原理与优化 底层数据结构 数据结构 数组 hash算法与寻址优化 添加元素优化 获取元素优化 扩容优化","categories":[],"tags":[]},{"title":"tech/儒猿/0002_并发编程","slug":"tech/儒猿/0002_并发编程","date":"2020-12-17T10:15:41.737Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"tech/儒猿/0002_并发编程/","link":"","permalink":"http://cngeeker365.github.io/tech/%E5%84%92%E7%8C%BF/0002_%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","excerpt":"","text":"0002_并发编程 1. synchronized 原理详解 2. CAS 无锁化 ConcurrentHashMap 详解 4. AQS 实现原理 线程池详解 工作原理 5.2 核心参数 阻塞队列 Java 内存模型 7. volatile 详解 指令重排 &amp; Happen-Before 8. Java并发包 Lock 锁","categories":[],"tags":[]},{"title":"menu.md","slug":"menu","date":"2019-10-17T11:34:57.000Z","updated":"2020-12-17T10:15:41.757Z","comments":true,"path":"menu/","link":"","permalink":"http://cngeeker365.github.io/menu/","excerpt":"","text":"首页 产品设计 技术 LeetCode 工具 软件配置 Mac配置 开发 golang test 读书 佛教 心经 药师经 经文 药师经的济世观 生活 乱弹","categories":[],"tags":[]},{"title":"home.md","slug":"reading/fojiao/xinjing","date":"2019-10-17T11:34:31.000Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"reading/fojiao/xinjing/","link":"","permalink":"http://cngeeker365.github.io/reading/fojiao/xinjing/","excerpt":"","text":"般若波罗蜜多心经 观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。舍利子，色不异空，空不异色，色即是空，空即是色，受想行识，亦复如是。舍利子，是诸法空相，不生不灭，不垢不净，不增不减。是故空中无色，无受想行识，无眼耳鼻舌身意，无色声香味触法，无眼界，乃至无意识界，无无明，亦无无明尽，乃至无老死，亦无老死尽。无苦集灭道，无智亦无得。以无所得故。菩提萨埵，依般若波罗蜜多故，心无挂碍。无挂碍故，无有恐怖，远离颠倒梦想，究竟涅盘。三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提。故知般若波罗蜜多，是大神咒，是大明咒，是无上咒，是无等等咒，能除一切苦，真实不虚。故说般若波罗蜜多咒，即说咒曰：揭谛揭谛，波罗揭谛，波罗僧揭谛，菩提萨婆诃。","categories":[],"tags":[]},{"title":"home.md","slug":"home","date":"2019-10-17T11:34:31.000Z","updated":"2020-12-17T10:15:41.737Z","comments":true,"path":"home/","link":"","permalink":"http://cngeeker365.github.io/home/","excerpt":"","text":"About Me","categories":[],"tags":[]}]}